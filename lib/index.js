// Generated by CoffeeScript 1.3.1
var Event, net, newmsg, _;

net = require("net");

Event = require("events").EventEmitter;

_ = require("underscore");

exports.listener = newmsg = new Event();

exports.startMail = function(port) {
  var server;
  if (port == null) {
    port = 25;
  }
  server = net.createServer(function(stream) {
    var stdresponse;
    stream.setEncoding("utf8");
    stream.out = function(msg) {
      return stream.write(msg + '\r\n');
    };
    stdresponse = function() {
      return stream.out('250 nodejs.io');
    };
    stream.isBody = false;
    stream.body = "";
    stream.sender = "";
    stream.on("connect", function() {
      stream.isBody = false;
      stream.body = "";
      stream.sender = "";
      return stream.out('220 SMTP nodejs');
    });
    return stream.on("data", function(m) {
      var code, lines;
      code = m.split(" ")[0].match(/.*/)[0];
      if (stream.isBody) {
        lines = _.compact(m.split('\r\n'));
        if (_.last(lines) === ".") {
          stream.isBody = false;
        }
        stream.body += m;
        if (!stream.isBody) {
          newmsg.emit("msg", stream.sender, stream.body);
        }
      }
      switch (code) {
        case "EHLO":
          return stream.out('502 Unsupported here');
        case "RCPT":
          stream.from = m;
          return stdresponse();
        case "DATA":
          stream.isBody = true;
          return stream.out('354 Enter mail, end with "." on a line by itself');
        case "QUIT":
          stream.out('221 Bye');
          return stream.destroy();
        default:
          return stdresponse();
      }
    });
  });
  server.listen(port);
  return console.log("mail listener has started on port " + port);
};
